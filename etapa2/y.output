   0  $accept : program $end

   1  program : program
   2          | commandList
   3          | variableDeclaration
   4          | functDeclaration

   5  commandList : command commandList

   6  functDeclaration : type IDENTIFIER '(' functParamsDef commandBlock

   7  command : print
   8          | return
   9          | read
  10          | attribuition
  11          | flowControl
  12          | commandBlock

  13  functCall : IDENTIFIER '(' functParams ')'

  14  functParams : IDENTIFIER functParamsCont
  15              |

  16  functParamsCont : ',' IDENTIFIER functParamsCont
  17                  |

  18  functParamsDef : type IDENTIFIER functParamsDefCont
  19                 |

  20  functParamsDefCont : ',' type IDENTIFIER functParamsDefCont
  21                     |

  22  commandBlock : '{' commandBlockList '}'

  23  commandBlockList : command ';' commandBlockList

  24  flowControl : IF '(' expression ')' THEN command ifThenCont
  25              | FOR '(' forCont

  26  ifThenCont : ELSE command
  27             |

  28  forCont : expression forEnd
  29          | IDENTIFIER '=' expression TO expression forEnd

  30  forEnd : ')' command

  31  attribuition : IDENTIFIER attribuitionCont

  32  attribuitionCont : '=' expression
  33                   | '[' expression ']' '=' expression

  34  read : READ IDENTIFIER

  35  return : RETURN expression

  36  print : PRINT printList

  37  printList : STRING printList
  38            | expression printList
  39            |

  40  logicalExpression : arithmeticExpression relationalOperators arithmeticExpression
  41                    | logicalExpression logicalOperators logicalExpression
  42                    | TRUE
  43                    | FALSE

  44  arithmeticExpression : arithmeticExpression arithmeticOperators arithmeticExpression
  45                       | integerExpression
  46                       | IDENTIFIER expressionVarCont
  47                       | REAL

  48  integerExpression : integerExpression arithmeticOperators integerExpression
  49                    | INTEGER

  50  charExpression : charExpression operator charExpression
  51                 | CHAR

  52  expression : '(' expression ')'
  53             | logicalExpression
  54             | arithmeticExpression
  55             | charExpression
  56             | functCall

  57  expressionVarCont : '[' arrayPosition ']'
  58                    |

  59  arrayPosition : integerExpression

  60  operator : logicalOperators
  61           | relationalOperators
  62           | arithmeticOperators

  63  logicalOperators : "||"
  64                   | "&&"

  65  relationalOperators : "=="
  66                      | "!="
  67                      | "<="
  68                      | ">="

  69  arithmeticOperators : '+'
  70                      | '-'
  71                      | '*'
  72                      | '/'

  73  variableDeclaration : type IDENTIFIER arrayOrNormal ';'

  74  arrayOrNormal : ':' literal
  75                | '[' INTEGER ']' arrayInit

  76  arrayInit : ':' arrayInitLiterals
  77            |

  78  arrayInitLiterals : literal arrayInitLiterals
  79                    |

  80  literal : INTEGER
  81          | FALSE
  82          | TRUE
  83          | CHAR

  84  type : INT
  85       | REAL
  86       | BOOL
  87       | CHAR

state 0
	$accept : . program $end  (0)

	INT  shift 1
	REAL  shift 2
	BOOL  shift 3
	CHAR  shift 4
	IDENTIFIER  shift 5
	READ  shift 6
	PRINT  shift 7
	RETURN  shift 8
	FOR  shift 9
	IF  shift 10
	'{'  shift 11
	.  error

	program  goto 12
	commandList  goto 13
	variableDeclaration  goto 14
	functDeclaration  goto 15
	command  goto 16
	type  goto 17
	commandBlock  goto 18
	print  goto 19
	return  goto 20
	read  goto 21
	attribuition  goto 22
	flowControl  goto 23


state 1
	type : INT .  (84)

	.  reduce 84


state 2
	type : REAL .  (85)

	.  reduce 85


state 3
	type : BOOL .  (86)

	.  reduce 86


state 4
	type : CHAR .  (87)

	.  reduce 87


state 5
	attribuition : IDENTIFIER . attribuitionCont  (31)

	'='  shift 24
	'['  shift 25
	.  error

	attribuitionCont  goto 26


state 6
	read : READ . IDENTIFIER  (34)

	IDENTIFIER  shift 27
	.  error


7: shift/reduce conflict (shift 33, reduce 39) on IDENTIFIER
state 7
	print : PRINT . printList  (36)
	printList : .  (39)

	REAL  shift 28
	CHAR  shift 29
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 33
	STRING  shift 34
	'('  shift 35
	READ  reduce 39
	PRINT  reduce 39
	RETURN  reduce 39
	FOR  reduce 39
	IF  reduce 39
	ELSE  reduce 39
	'{'  reduce 39
	';'  reduce 39

	functCall  goto 36
	expression  goto 37
	printList  goto 38
	logicalExpression  goto 39
	arithmeticExpression  goto 40
	integerExpression  goto 41
	charExpression  goto 42


state 8
	return : RETURN . expression  (35)

	REAL  shift 28
	CHAR  shift 29
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 33
	'('  shift 35
	.  error

	functCall  goto 36
	expression  goto 43
	logicalExpression  goto 39
	arithmeticExpression  goto 40
	integerExpression  goto 41
	charExpression  goto 42


state 9
	flowControl : FOR . '(' forCont  (25)

	'('  shift 44
	.  error


state 10
	flowControl : IF . '(' expression ')' THEN command ifThenCont  (24)

	'('  shift 45
	.  error


state 11
	commandBlock : '{' . commandBlockList '}'  (22)

	IDENTIFIER  shift 5
	READ  shift 6
	PRINT  shift 7
	RETURN  shift 8
	FOR  shift 9
	IF  shift 10
	'{'  shift 11
	.  error

	command  goto 46
	commandBlock  goto 18
	print  goto 19
	return  goto 20
	read  goto 21
	attribuition  goto 22
	flowControl  goto 23
	commandBlockList  goto 47


state 12
	$accept : program . $end  (0)
	program : program .  (1)

	$end  accept
	.  reduce 1


state 13
	program : commandList .  (2)

	.  reduce 2


state 14
	program : variableDeclaration .  (3)

	.  reduce 3


state 15
	program : functDeclaration .  (4)

	.  reduce 4


state 16
	commandList : command . commandList  (5)

	IDENTIFIER  shift 5
	READ  shift 6
	PRINT  shift 7
	RETURN  shift 8
	FOR  shift 9
	IF  shift 10
	'{'  shift 11
	.  error

	commandList  goto 48
	command  goto 16
	commandBlock  goto 18
	print  goto 19
	return  goto 20
	read  goto 21
	attribuition  goto 22
	flowControl  goto 23


state 17
	functDeclaration : type . IDENTIFIER '(' functParamsDef commandBlock  (6)
	variableDeclaration : type . IDENTIFIER arrayOrNormal ';'  (73)

	IDENTIFIER  shift 49
	.  error


state 18
	command : commandBlock .  (12)

	.  reduce 12


state 19
	command : print .  (7)

	.  reduce 7


state 20
	command : return .  (8)

	.  reduce 8


state 21
	command : read .  (9)

	.  reduce 9


state 22
	command : attribuition .  (10)

	.  reduce 10


state 23
	command : flowControl .  (11)

	.  reduce 11


state 24
	attribuitionCont : '=' . expression  (32)

	REAL  shift 28
	CHAR  shift 29
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 33
	'('  shift 35
	.  error

	functCall  goto 36
	expression  goto 50
	logicalExpression  goto 39
	arithmeticExpression  goto 40
	integerExpression  goto 41
	charExpression  goto 42


state 25
	attribuitionCont : '[' . expression ']' '=' expression  (33)

	REAL  shift 28
	CHAR  shift 29
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 33
	'('  shift 35
	.  error

	functCall  goto 36
	expression  goto 51
	logicalExpression  goto 39
	arithmeticExpression  goto 40
	integerExpression  goto 41
	charExpression  goto 42


state 26
	attribuition : IDENTIFIER attribuitionCont .  (31)

	.  reduce 31


state 27
	read : READ IDENTIFIER .  (34)

	.  reduce 34


state 28
	arithmeticExpression : REAL .  (47)

	.  reduce 47


state 29
	charExpression : CHAR .  (51)

	.  reduce 51


state 30
	integerExpression : INTEGER .  (49)

	.  reduce 49


state 31
	logicalExpression : FALSE .  (43)

	.  reduce 43


state 32
	logicalExpression : TRUE .  (42)

	.  reduce 42


33: shift/reduce conflict (shift 52, reduce 58) on '('
state 33
	functCall : IDENTIFIER . '(' functParams ')'  (13)
	arithmeticExpression : IDENTIFIER . expressionVarCont  (46)
	expressionVarCont : .  (58)

	'('  shift 52
	'['  shift 53
	REAL  reduce 58
	CHAR  reduce 58
	INTEGER  reduce 58
	FALSE  reduce 58
	TRUE  reduce 58
	IDENTIFIER  reduce 58
	READ  reduce 58
	PRINT  reduce 58
	RETURN  reduce 58
	STRING  reduce 58
	TO  reduce 58
	FOR  reduce 58
	IF  reduce 58
	ELSE  reduce 58
	')'  reduce 58
	'{'  reduce 58
	';'  reduce 58
	']'  reduce 58
	"=="  reduce 58
	"!="  reduce 58
	"<="  reduce 58
	">="  reduce 58
	'+'  reduce 58
	'-'  reduce 58
	'*'  reduce 58
	'/'  reduce 58

	expressionVarCont  goto 54


34: shift/reduce conflict (shift 33, reduce 39) on IDENTIFIER
state 34
	printList : STRING . printList  (37)
	printList : .  (39)

	REAL  shift 28
	CHAR  shift 29
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 33
	STRING  shift 34
	'('  shift 35
	READ  reduce 39
	PRINT  reduce 39
	RETURN  reduce 39
	FOR  reduce 39
	IF  reduce 39
	ELSE  reduce 39
	'{'  reduce 39
	';'  reduce 39

	functCall  goto 36
	expression  goto 37
	printList  goto 55
	logicalExpression  goto 39
	arithmeticExpression  goto 40
	integerExpression  goto 41
	charExpression  goto 42


state 35
	expression : '(' . expression ')'  (52)

	REAL  shift 28
	CHAR  shift 29
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 33
	'('  shift 35
	.  error

	functCall  goto 36
	expression  goto 56
	logicalExpression  goto 39
	arithmeticExpression  goto 40
	integerExpression  goto 41
	charExpression  goto 42


state 36
	expression : functCall .  (56)

	.  reduce 56


37: shift/reduce conflict (shift 33, reduce 39) on IDENTIFIER
state 37
	printList : expression . printList  (38)
	printList : .  (39)

	REAL  shift 28
	CHAR  shift 29
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 33
	STRING  shift 34
	'('  shift 35
	READ  reduce 39
	PRINT  reduce 39
	RETURN  reduce 39
	FOR  reduce 39
	IF  reduce 39
	ELSE  reduce 39
	'{'  reduce 39
	';'  reduce 39

	functCall  goto 36
	expression  goto 37
	printList  goto 57
	logicalExpression  goto 39
	arithmeticExpression  goto 40
	integerExpression  goto 41
	charExpression  goto 42


state 38
	print : PRINT printList .  (36)

	.  reduce 36


state 39
	logicalExpression : logicalExpression . logicalOperators logicalExpression  (41)
	expression : logicalExpression .  (53)

	"||"  shift 58
	"&&"  shift 59
	REAL  reduce 53
	CHAR  reduce 53
	INTEGER  reduce 53
	FALSE  reduce 53
	TRUE  reduce 53
	IDENTIFIER  reduce 53
	READ  reduce 53
	PRINT  reduce 53
	RETURN  reduce 53
	STRING  reduce 53
	TO  reduce 53
	FOR  reduce 53
	IF  reduce 53
	ELSE  reduce 53
	'('  reduce 53
	')'  reduce 53
	'{'  reduce 53
	';'  reduce 53
	']'  reduce 53

	logicalOperators  goto 60


state 40
	logicalExpression : arithmeticExpression . relationalOperators arithmeticExpression  (40)
	arithmeticExpression : arithmeticExpression . arithmeticOperators arithmeticExpression  (44)
	expression : arithmeticExpression .  (54)

	"=="  shift 61
	"!="  shift 62
	"<="  shift 63
	">="  shift 64
	'+'  shift 65
	'-'  shift 66
	'*'  shift 67
	'/'  shift 68
	REAL  reduce 54
	CHAR  reduce 54
	INTEGER  reduce 54
	FALSE  reduce 54
	TRUE  reduce 54
	IDENTIFIER  reduce 54
	READ  reduce 54
	PRINT  reduce 54
	RETURN  reduce 54
	STRING  reduce 54
	TO  reduce 54
	FOR  reduce 54
	IF  reduce 54
	ELSE  reduce 54
	'('  reduce 54
	')'  reduce 54
	'{'  reduce 54
	';'  reduce 54
	']'  reduce 54

	relationalOperators  goto 69
	arithmeticOperators  goto 70


41: shift/reduce conflict (shift 65, reduce 45) on '+'
41: shift/reduce conflict (shift 66, reduce 45) on '-'
41: shift/reduce conflict (shift 67, reduce 45) on '*'
41: shift/reduce conflict (shift 68, reduce 45) on '/'
state 41
	arithmeticExpression : integerExpression .  (45)
	integerExpression : integerExpression . arithmeticOperators integerExpression  (48)

	'+'  shift 65
	'-'  shift 66
	'*'  shift 67
	'/'  shift 68
	REAL  reduce 45
	CHAR  reduce 45
	INTEGER  reduce 45
	FALSE  reduce 45
	TRUE  reduce 45
	IDENTIFIER  reduce 45
	READ  reduce 45
	PRINT  reduce 45
	RETURN  reduce 45
	STRING  reduce 45
	TO  reduce 45
	FOR  reduce 45
	IF  reduce 45
	ELSE  reduce 45
	'('  reduce 45
	')'  reduce 45
	'{'  reduce 45
	';'  reduce 45
	']'  reduce 45
	"||"  reduce 45
	"&&"  reduce 45
	"=="  reduce 45
	"!="  reduce 45
	"<="  reduce 45
	">="  reduce 45

	arithmeticOperators  goto 71


state 42
	charExpression : charExpression . operator charExpression  (50)
	expression : charExpression .  (55)

	"||"  shift 58
	"&&"  shift 59
	"=="  shift 61
	"!="  shift 62
	"<="  shift 63
	">="  shift 64
	'+'  shift 65
	'-'  shift 66
	'*'  shift 67
	'/'  shift 68
	REAL  reduce 55
	CHAR  reduce 55
	INTEGER  reduce 55
	FALSE  reduce 55
	TRUE  reduce 55
	IDENTIFIER  reduce 55
	READ  reduce 55
	PRINT  reduce 55
	RETURN  reduce 55
	STRING  reduce 55
	TO  reduce 55
	FOR  reduce 55
	IF  reduce 55
	ELSE  reduce 55
	'('  reduce 55
	')'  reduce 55
	'{'  reduce 55
	';'  reduce 55
	']'  reduce 55

	relationalOperators  goto 72
	logicalOperators  goto 73
	arithmeticOperators  goto 74
	operator  goto 75


state 43
	return : RETURN expression .  (35)

	.  reduce 35


state 44
	flowControl : FOR '(' . forCont  (25)

	REAL  shift 28
	CHAR  shift 29
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 76
	'('  shift 35
	.  error

	functCall  goto 36
	expression  goto 77
	forCont  goto 78
	logicalExpression  goto 39
	arithmeticExpression  goto 40
	integerExpression  goto 41
	charExpression  goto 42


state 45
	flowControl : IF '(' . expression ')' THEN command ifThenCont  (24)

	REAL  shift 28
	CHAR  shift 29
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 33
	'('  shift 35
	.  error

	functCall  goto 36
	expression  goto 79
	logicalExpression  goto 39
	arithmeticExpression  goto 40
	integerExpression  goto 41
	charExpression  goto 42


state 46
	commandBlockList : command . ';' commandBlockList  (23)

	';'  shift 80
	.  error


state 47
	commandBlock : '{' commandBlockList . '}'  (22)

	'}'  shift 81
	.  error


state 48
	commandList : command commandList .  (5)

	.  reduce 5


state 49
	functDeclaration : type IDENTIFIER . '(' functParamsDef commandBlock  (6)
	variableDeclaration : type IDENTIFIER . arrayOrNormal ';'  (73)

	'('  shift 82
	'['  shift 83
	':'  shift 84
	.  error

	arrayOrNormal  goto 85


state 50
	attribuitionCont : '=' expression .  (32)

	.  reduce 32


state 51
	attribuitionCont : '[' expression . ']' '=' expression  (33)

	']'  shift 86
	.  error


state 52
	functCall : IDENTIFIER '(' . functParams ')'  (13)
	functParams : .  (15)

	IDENTIFIER  shift 87
	')'  reduce 15

	functParams  goto 88


state 53
	expressionVarCont : '[' . arrayPosition ']'  (57)

	INTEGER  shift 30
	.  error

	integerExpression  goto 89
	arrayPosition  goto 90


state 54
	arithmeticExpression : IDENTIFIER expressionVarCont .  (46)

	.  reduce 46


state 55
	printList : STRING printList .  (37)

	.  reduce 37


state 56
	expression : '(' expression . ')'  (52)

	')'  shift 91
	.  error


state 57
	printList : expression printList .  (38)

	.  reduce 38


state 58
	logicalOperators : "||" .  (63)

	.  reduce 63


state 59
	logicalOperators : "&&" .  (64)

	.  reduce 64


state 60
	logicalExpression : logicalExpression logicalOperators . logicalExpression  (41)

	REAL  shift 28
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 92
	.  error

	logicalExpression  goto 93
	arithmeticExpression  goto 94
	integerExpression  goto 41


state 61
	relationalOperators : "==" .  (65)

	.  reduce 65


state 62
	relationalOperators : "!=" .  (66)

	.  reduce 66


state 63
	relationalOperators : "<=" .  (67)

	.  reduce 67


state 64
	relationalOperators : ">=" .  (68)

	.  reduce 68


state 65
	arithmeticOperators : '+' .  (69)

	.  reduce 69


state 66
	arithmeticOperators : '-' .  (70)

	.  reduce 70


state 67
	arithmeticOperators : '*' .  (71)

	.  reduce 71


state 68
	arithmeticOperators : '/' .  (72)

	.  reduce 72


state 69
	logicalExpression : arithmeticExpression relationalOperators . arithmeticExpression  (40)

	REAL  shift 28
	INTEGER  shift 30
	IDENTIFIER  shift 92
	.  error

	arithmeticExpression  goto 95
	integerExpression  goto 41


state 70
	arithmeticExpression : arithmeticExpression arithmeticOperators . arithmeticExpression  (44)

	REAL  shift 28
	INTEGER  shift 30
	IDENTIFIER  shift 92
	.  error

	arithmeticExpression  goto 96
	integerExpression  goto 41


state 71
	integerExpression : integerExpression arithmeticOperators . integerExpression  (48)

	INTEGER  shift 30
	.  error

	integerExpression  goto 97


state 72
	operator : relationalOperators .  (61)

	.  reduce 61


state 73
	operator : logicalOperators .  (60)

	.  reduce 60


state 74
	operator : arithmeticOperators .  (62)

	.  reduce 62


state 75
	charExpression : charExpression operator . charExpression  (50)

	CHAR  shift 29
	.  error

	charExpression  goto 98


state 76
	functCall : IDENTIFIER . '(' functParams ')'  (13)
	forCont : IDENTIFIER . '=' expression TO expression forEnd  (29)
	arithmeticExpression : IDENTIFIER . expressionVarCont  (46)
	expressionVarCont : .  (58)

	'('  shift 52
	'='  shift 99
	'['  shift 53
	')'  reduce 58
	"=="  reduce 58
	"!="  reduce 58
	"<="  reduce 58
	">="  reduce 58
	'+'  reduce 58
	'-'  reduce 58
	'*'  reduce 58
	'/'  reduce 58

	expressionVarCont  goto 54


state 77
	forCont : expression . forEnd  (28)

	')'  shift 100
	.  error

	forEnd  goto 101


state 78
	flowControl : FOR '(' forCont .  (25)

	.  reduce 25


state 79
	flowControl : IF '(' expression . ')' THEN command ifThenCont  (24)

	')'  shift 102
	.  error


state 80
	commandBlockList : command ';' . commandBlockList  (23)

	IDENTIFIER  shift 5
	READ  shift 6
	PRINT  shift 7
	RETURN  shift 8
	FOR  shift 9
	IF  shift 10
	'{'  shift 11
	.  error

	command  goto 46
	commandBlock  goto 18
	print  goto 19
	return  goto 20
	read  goto 21
	attribuition  goto 22
	flowControl  goto 23
	commandBlockList  goto 103


state 81
	commandBlock : '{' commandBlockList '}' .  (22)

	.  reduce 22


state 82
	functDeclaration : type IDENTIFIER '(' . functParamsDef commandBlock  (6)
	functParamsDef : .  (19)

	INT  shift 1
	REAL  shift 2
	BOOL  shift 3
	CHAR  shift 4
	'{'  reduce 19

	type  goto 104
	functParamsDef  goto 105


state 83
	arrayOrNormal : '[' . INTEGER ']' arrayInit  (75)

	INTEGER  shift 106
	.  error


state 84
	arrayOrNormal : ':' . literal  (74)

	CHAR  shift 107
	INTEGER  shift 108
	FALSE  shift 109
	TRUE  shift 110
	.  error

	literal  goto 111


state 85
	variableDeclaration : type IDENTIFIER arrayOrNormal . ';'  (73)

	';'  shift 112
	.  error


state 86
	attribuitionCont : '[' expression ']' . '=' expression  (33)

	'='  shift 113
	.  error


state 87
	functParams : IDENTIFIER . functParamsCont  (14)
	functParamsCont : .  (17)

	','  shift 114
	')'  reduce 17

	functParamsCont  goto 115


state 88
	functCall : IDENTIFIER '(' functParams . ')'  (13)

	')'  shift 116
	.  error


state 89
	integerExpression : integerExpression . arithmeticOperators integerExpression  (48)
	arrayPosition : integerExpression .  (59)

	'+'  shift 65
	'-'  shift 66
	'*'  shift 67
	'/'  shift 68
	']'  reduce 59

	arithmeticOperators  goto 71


state 90
	expressionVarCont : '[' arrayPosition . ']'  (57)

	']'  shift 117
	.  error


state 91
	expression : '(' expression ')' .  (52)

	.  reduce 52


state 92
	arithmeticExpression : IDENTIFIER . expressionVarCont  (46)
	expressionVarCont : .  (58)

	'['  shift 53
	REAL  reduce 58
	CHAR  reduce 58
	INTEGER  reduce 58
	FALSE  reduce 58
	TRUE  reduce 58
	IDENTIFIER  reduce 58
	READ  reduce 58
	PRINT  reduce 58
	RETURN  reduce 58
	STRING  reduce 58
	TO  reduce 58
	FOR  reduce 58
	IF  reduce 58
	ELSE  reduce 58
	'('  reduce 58
	')'  reduce 58
	'{'  reduce 58
	';'  reduce 58
	']'  reduce 58
	"||"  reduce 58
	"&&"  reduce 58
	"=="  reduce 58
	"!="  reduce 58
	"<="  reduce 58
	">="  reduce 58
	'+'  reduce 58
	'-'  reduce 58
	'*'  reduce 58
	'/'  reduce 58

	expressionVarCont  goto 54


93: shift/reduce conflict (shift 58, reduce 41) on "||"
93: shift/reduce conflict (shift 59, reduce 41) on "&&"
state 93
	logicalExpression : logicalExpression . logicalOperators logicalExpression  (41)
	logicalExpression : logicalExpression logicalOperators logicalExpression .  (41)

	"||"  shift 58
	"&&"  shift 59
	REAL  reduce 41
	CHAR  reduce 41
	INTEGER  reduce 41
	FALSE  reduce 41
	TRUE  reduce 41
	IDENTIFIER  reduce 41
	READ  reduce 41
	PRINT  reduce 41
	RETURN  reduce 41
	STRING  reduce 41
	TO  reduce 41
	FOR  reduce 41
	IF  reduce 41
	ELSE  reduce 41
	'('  reduce 41
	')'  reduce 41
	'{'  reduce 41
	';'  reduce 41
	']'  reduce 41

	logicalOperators  goto 60


state 94
	logicalExpression : arithmeticExpression . relationalOperators arithmeticExpression  (40)
	arithmeticExpression : arithmeticExpression . arithmeticOperators arithmeticExpression  (44)

	"=="  shift 61
	"!="  shift 62
	"<="  shift 63
	">="  shift 64
	'+'  shift 65
	'-'  shift 66
	'*'  shift 67
	'/'  shift 68
	.  error

	relationalOperators  goto 69
	arithmeticOperators  goto 70


state 95
	logicalExpression : arithmeticExpression relationalOperators arithmeticExpression .  (40)
	arithmeticExpression : arithmeticExpression . arithmeticOperators arithmeticExpression  (44)

	'+'  shift 65
	'-'  shift 66
	'*'  shift 67
	'/'  shift 68
	REAL  reduce 40
	CHAR  reduce 40
	INTEGER  reduce 40
	FALSE  reduce 40
	TRUE  reduce 40
	IDENTIFIER  reduce 40
	READ  reduce 40
	PRINT  reduce 40
	RETURN  reduce 40
	STRING  reduce 40
	TO  reduce 40
	FOR  reduce 40
	IF  reduce 40
	ELSE  reduce 40
	'('  reduce 40
	')'  reduce 40
	'{'  reduce 40
	';'  reduce 40
	']'  reduce 40
	"||"  reduce 40
	"&&"  reduce 40

	arithmeticOperators  goto 70


96: shift/reduce conflict (shift 65, reduce 44) on '+'
96: shift/reduce conflict (shift 66, reduce 44) on '-'
96: shift/reduce conflict (shift 67, reduce 44) on '*'
96: shift/reduce conflict (shift 68, reduce 44) on '/'
state 96
	arithmeticExpression : arithmeticExpression . arithmeticOperators arithmeticExpression  (44)
	arithmeticExpression : arithmeticExpression arithmeticOperators arithmeticExpression .  (44)

	'+'  shift 65
	'-'  shift 66
	'*'  shift 67
	'/'  shift 68
	REAL  reduce 44
	CHAR  reduce 44
	INTEGER  reduce 44
	FALSE  reduce 44
	TRUE  reduce 44
	IDENTIFIER  reduce 44
	READ  reduce 44
	PRINT  reduce 44
	RETURN  reduce 44
	STRING  reduce 44
	TO  reduce 44
	FOR  reduce 44
	IF  reduce 44
	ELSE  reduce 44
	'('  reduce 44
	')'  reduce 44
	'{'  reduce 44
	';'  reduce 44
	']'  reduce 44
	"||"  reduce 44
	"&&"  reduce 44
	"=="  reduce 44
	"!="  reduce 44
	"<="  reduce 44
	">="  reduce 44

	arithmeticOperators  goto 70


97: shift/reduce conflict (shift 65, reduce 48) on '+'
97: shift/reduce conflict (shift 66, reduce 48) on '-'
97: shift/reduce conflict (shift 67, reduce 48) on '*'
97: shift/reduce conflict (shift 68, reduce 48) on '/'
state 97
	integerExpression : integerExpression . arithmeticOperators integerExpression  (48)
	integerExpression : integerExpression arithmeticOperators integerExpression .  (48)

	'+'  shift 65
	'-'  shift 66
	'*'  shift 67
	'/'  shift 68
	REAL  reduce 48
	CHAR  reduce 48
	INTEGER  reduce 48
	FALSE  reduce 48
	TRUE  reduce 48
	IDENTIFIER  reduce 48
	READ  reduce 48
	PRINT  reduce 48
	RETURN  reduce 48
	STRING  reduce 48
	TO  reduce 48
	FOR  reduce 48
	IF  reduce 48
	ELSE  reduce 48
	'('  reduce 48
	')'  reduce 48
	'{'  reduce 48
	';'  reduce 48
	']'  reduce 48
	"||"  reduce 48
	"&&"  reduce 48
	"=="  reduce 48
	"!="  reduce 48
	"<="  reduce 48
	">="  reduce 48

	arithmeticOperators  goto 71


98: shift/reduce conflict (shift 58, reduce 50) on "||"
98: shift/reduce conflict (shift 59, reduce 50) on "&&"
98: shift/reduce conflict (shift 61, reduce 50) on "=="
98: shift/reduce conflict (shift 62, reduce 50) on "!="
98: shift/reduce conflict (shift 63, reduce 50) on "<="
98: shift/reduce conflict (shift 64, reduce 50) on ">="
98: shift/reduce conflict (shift 65, reduce 50) on '+'
98: shift/reduce conflict (shift 66, reduce 50) on '-'
98: shift/reduce conflict (shift 67, reduce 50) on '*'
98: shift/reduce conflict (shift 68, reduce 50) on '/'
state 98
	charExpression : charExpression . operator charExpression  (50)
	charExpression : charExpression operator charExpression .  (50)

	"||"  shift 58
	"&&"  shift 59
	"=="  shift 61
	"!="  shift 62
	"<="  shift 63
	">="  shift 64
	'+'  shift 65
	'-'  shift 66
	'*'  shift 67
	'/'  shift 68
	REAL  reduce 50
	CHAR  reduce 50
	INTEGER  reduce 50
	FALSE  reduce 50
	TRUE  reduce 50
	IDENTIFIER  reduce 50
	READ  reduce 50
	PRINT  reduce 50
	RETURN  reduce 50
	STRING  reduce 50
	TO  reduce 50
	FOR  reduce 50
	IF  reduce 50
	ELSE  reduce 50
	'('  reduce 50
	')'  reduce 50
	'{'  reduce 50
	';'  reduce 50
	']'  reduce 50

	relationalOperators  goto 72
	logicalOperators  goto 73
	arithmeticOperators  goto 74
	operator  goto 75


state 99
	forCont : IDENTIFIER '=' . expression TO expression forEnd  (29)

	REAL  shift 28
	CHAR  shift 29
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 33
	'('  shift 35
	.  error

	functCall  goto 36
	expression  goto 118
	logicalExpression  goto 39
	arithmeticExpression  goto 40
	integerExpression  goto 41
	charExpression  goto 42


state 100
	forEnd : ')' . command  (30)

	IDENTIFIER  shift 5
	READ  shift 6
	PRINT  shift 7
	RETURN  shift 8
	FOR  shift 9
	IF  shift 10
	'{'  shift 11
	.  error

	command  goto 119
	commandBlock  goto 18
	print  goto 19
	return  goto 20
	read  goto 21
	attribuition  goto 22
	flowControl  goto 23


state 101
	forCont : expression forEnd .  (28)

	.  reduce 28


state 102
	flowControl : IF '(' expression ')' . THEN command ifThenCont  (24)

	THEN  shift 120
	.  error


state 103
	commandBlockList : command ';' commandBlockList .  (23)

	.  reduce 23


state 104
	functParamsDef : type . IDENTIFIER functParamsDefCont  (18)

	IDENTIFIER  shift 121
	.  error


state 105
	functDeclaration : type IDENTIFIER '(' functParamsDef . commandBlock  (6)

	'{'  shift 11
	.  error

	commandBlock  goto 122


state 106
	arrayOrNormal : '[' INTEGER . ']' arrayInit  (75)

	']'  shift 123
	.  error


state 107
	literal : CHAR .  (83)

	.  reduce 83


state 108
	literal : INTEGER .  (80)

	.  reduce 80


state 109
	literal : FALSE .  (81)

	.  reduce 81


state 110
	literal : TRUE .  (82)

	.  reduce 82


state 111
	arrayOrNormal : ':' literal .  (74)

	.  reduce 74


state 112
	variableDeclaration : type IDENTIFIER arrayOrNormal ';' .  (73)

	.  reduce 73


state 113
	attribuitionCont : '[' expression ']' '=' . expression  (33)

	REAL  shift 28
	CHAR  shift 29
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 33
	'('  shift 35
	.  error

	functCall  goto 36
	expression  goto 124
	logicalExpression  goto 39
	arithmeticExpression  goto 40
	integerExpression  goto 41
	charExpression  goto 42


state 114
	functParamsCont : ',' . IDENTIFIER functParamsCont  (16)

	IDENTIFIER  shift 125
	.  error


state 115
	functParams : IDENTIFIER functParamsCont .  (14)

	.  reduce 14


state 116
	functCall : IDENTIFIER '(' functParams ')' .  (13)

	.  reduce 13


state 117
	expressionVarCont : '[' arrayPosition ']' .  (57)

	.  reduce 57


state 118
	forCont : IDENTIFIER '=' expression . TO expression forEnd  (29)

	TO  shift 126
	.  error


state 119
	forEnd : ')' command .  (30)

	.  reduce 30


state 120
	flowControl : IF '(' expression ')' THEN . command ifThenCont  (24)

	IDENTIFIER  shift 5
	READ  shift 6
	PRINT  shift 7
	RETURN  shift 8
	FOR  shift 9
	IF  shift 10
	'{'  shift 11
	.  error

	command  goto 127
	commandBlock  goto 18
	print  goto 19
	return  goto 20
	read  goto 21
	attribuition  goto 22
	flowControl  goto 23


state 121
	functParamsDef : type IDENTIFIER . functParamsDefCont  (18)
	functParamsDefCont : .  (21)

	','  shift 128
	'{'  reduce 21

	functParamsDefCont  goto 129


state 122
	functDeclaration : type IDENTIFIER '(' functParamsDef commandBlock .  (6)

	.  reduce 6


state 123
	arrayOrNormal : '[' INTEGER ']' . arrayInit  (75)
	arrayInit : .  (77)

	':'  shift 130
	';'  reduce 77

	arrayInit  goto 131


state 124
	attribuitionCont : '[' expression ']' '=' expression .  (33)

	.  reduce 33


state 125
	functParamsCont : ',' IDENTIFIER . functParamsCont  (16)
	functParamsCont : .  (17)

	','  shift 114
	')'  reduce 17

	functParamsCont  goto 132


state 126
	forCont : IDENTIFIER '=' expression TO . expression forEnd  (29)

	REAL  shift 28
	CHAR  shift 29
	INTEGER  shift 30
	FALSE  shift 31
	TRUE  shift 32
	IDENTIFIER  shift 33
	'('  shift 35
	.  error

	functCall  goto 36
	expression  goto 133
	logicalExpression  goto 39
	arithmeticExpression  goto 40
	integerExpression  goto 41
	charExpression  goto 42


127: shift/reduce conflict (shift 134, reduce 27) on ELSE
state 127
	flowControl : IF '(' expression ')' THEN command . ifThenCont  (24)
	ifThenCont : .  (27)

	ELSE  shift 134
	IDENTIFIER  reduce 27
	READ  reduce 27
	PRINT  reduce 27
	RETURN  reduce 27
	FOR  reduce 27
	IF  reduce 27
	'{'  reduce 27
	';'  reduce 27

	ifThenCont  goto 135


state 128
	functParamsDefCont : ',' . type IDENTIFIER functParamsDefCont  (20)

	INT  shift 1
	REAL  shift 2
	BOOL  shift 3
	CHAR  shift 4
	.  error

	type  goto 136


state 129
	functParamsDef : type IDENTIFIER functParamsDefCont .  (18)

	.  reduce 18


state 130
	arrayInit : ':' . arrayInitLiterals  (76)
	arrayInitLiterals : .  (79)

	CHAR  shift 107
	INTEGER  shift 108
	FALSE  shift 109
	TRUE  shift 110
	';'  reduce 79

	literal  goto 137
	arrayInitLiterals  goto 138


state 131
	arrayOrNormal : '[' INTEGER ']' arrayInit .  (75)

	.  reduce 75


state 132
	functParamsCont : ',' IDENTIFIER functParamsCont .  (16)

	.  reduce 16


state 133
	forCont : IDENTIFIER '=' expression TO expression . forEnd  (29)

	')'  shift 100
	.  error

	forEnd  goto 139


state 134
	ifThenCont : ELSE . command  (26)

	IDENTIFIER  shift 5
	READ  shift 6
	PRINT  shift 7
	RETURN  shift 8
	FOR  shift 9
	IF  shift 10
	'{'  shift 11
	.  error

	command  goto 140
	commandBlock  goto 18
	print  goto 19
	return  goto 20
	read  goto 21
	attribuition  goto 22
	flowControl  goto 23


state 135
	flowControl : IF '(' expression ')' THEN command ifThenCont .  (24)

	.  reduce 24


state 136
	functParamsDefCont : ',' type . IDENTIFIER functParamsDefCont  (20)

	IDENTIFIER  shift 141
	.  error


state 137
	arrayInitLiterals : literal . arrayInitLiterals  (78)
	arrayInitLiterals : .  (79)

	CHAR  shift 107
	INTEGER  shift 108
	FALSE  shift 109
	TRUE  shift 110
	';'  reduce 79

	literal  goto 137
	arrayInitLiterals  goto 142


state 138
	arrayInit : ':' arrayInitLiterals .  (76)

	.  reduce 76


state 139
	forCont : IDENTIFIER '=' expression TO expression forEnd .  (29)

	.  reduce 29


state 140
	ifThenCont : ELSE command .  (26)

	.  reduce 26


state 141
	functParamsDefCont : ',' type IDENTIFIER . functParamsDefCont  (20)
	functParamsDefCont : .  (21)

	','  shift 128
	'{'  reduce 21

	functParamsDefCont  goto 143


state 142
	arrayInitLiterals : literal arrayInitLiterals .  (78)

	.  reduce 78


state 143
	functParamsDefCont : ',' type IDENTIFIER functParamsDefCont .  (20)

	.  reduce 20


State 7 contains 1 shift/reduce conflict.
State 33 contains 1 shift/reduce conflict.
State 34 contains 1 shift/reduce conflict.
State 37 contains 1 shift/reduce conflict.
State 41 contains 4 shift/reduce conflicts.
State 93 contains 2 shift/reduce conflicts.
State 96 contains 4 shift/reduce conflicts.
State 97 contains 4 shift/reduce conflicts.
State 98 contains 10 shift/reduce conflicts.
State 127 contains 1 shift/reduce conflict.


39 terminals, 39 nonterminals
88 grammar rules, 144 states
