   0  $accept : program $end

   1  program : declarationList

   2  declarationList : variableDeclaration declarationList
   3                  | functDeclaration declarationList

   4  functDeclaration : type IDENTIFIER '(' functParamsDef ')' commandBlock ';'

   5  command : print
   6          | return
   7          | read
   8          | attribuition
   9          | flowControl
  10          | commandBlock
  11          |

  12  functCall : IDENTIFIER '(' functParams ')'

  13  functParams : IDENTIFIER functParamsCont
  14              |

  15  functParamsCont : ',' IDENTIFIER functParamsCont
  16                  |

  17  functParamsDef : type IDENTIFIER functParamsDefCont
  18                 |

  19  functParamsDefCont : ',' type IDENTIFIER functParamsDefCont
  20                     |

  21  commandBlock : '{' commandBlockList '}'

  22  commandBlockList : command ';' commandBlockList

  23  flowControl : IF '(' expression ')' THEN command ifThenCont
  24              | FOR '(' forCont

  25  ifThenCont : ELSE command
  26             |

  27  forCont : expression forEnd
  28          | IDENTIFIER '=' expression TO expression forEnd

  29  forEnd : ')' command

  30  attribuition : IDENTIFIER attribuitionCont

  31  attribuitionCont : '=' expression
  32                   | '[' expression ']' '=' expression

  33  read : READ IDENTIFIER

  34  return : RETURN expression

  35  print : PRINT printList

  36  printList : STRING printList
  37            | expression printList
  38            |

  39  logicalExpression : arithmeticExpression relationalOperators arithmeticExpression
  40                    | logicalExpression logicalOperators logicalExpression
  41                    | TRUE
  42                    | FALSE

  43  arithmeticExpression : arithmeticExpression arithmeticOperators arithmeticExpression
  44                       | integerExpression
  45                       | IDENTIFIER expressionVarCont
  46                       | REAL

  47  integerExpression : integerExpression arithmeticOperators integerExpression
  48                    | INTEGER

  49  charExpression : charExpression operator charExpression
  50                 | CHAR

  51  expression : '(' expression ')'
  52             | logicalExpression
  53             | arithmeticExpression
  54             | charExpression
  55             | functCall

  56  expressionVarCont : '[' arrayPosition ']'
  57                    |

  58  arrayPosition : integerExpression

  59  operator : logicalOperators
  60           | relationalOperators
  61           | arithmeticOperators

  62  logicalOperators : "||"
  63                   | "&&"

  64  relationalOperators : "=="
  65                      | "!="
  66                      | "<="
  67                      | ">="

  68  arithmeticOperators : '+'
  69                      | '-'
  70                      | '*'
  71                      | '/'

  72  variableDeclaration : type IDENTIFIER arrayOrNormal ';'

  73  arrayOrNormal : ':' literal
  74                | '[' INTEGER ']' arrayInit

  75  arrayInit : ':' arrayInitLiterals
  76            |

  77  arrayInitLiterals : literal arrayInitLiterals
  78                    |

  79  literal : INTEGER
  80          | FALSE
  81          | TRUE
  82          | CHAR

  83  type : INT
  84       | REAL
  85       | BOOL
  86       | CHAR

state 0
	$accept : . program $end  (0)

	INT  shift 1
	REAL  shift 2
	BOOL  shift 3
	CHAR  shift 4
	.  error

	program  goto 5
	declarationList  goto 6
	variableDeclaration  goto 7
	functDeclaration  goto 8
	type  goto 9


state 1
	type : INT .  (83)

	.  reduce 83


state 2
	type : REAL .  (84)

	.  reduce 84


state 3
	type : BOOL .  (85)

	.  reduce 85


state 4
	type : CHAR .  (86)

	.  reduce 86


state 5
	$accept : program . $end  (0)

	$end  accept


state 6
	program : declarationList .  (1)

	.  reduce 1


state 7
	declarationList : variableDeclaration . declarationList  (2)

	INT  shift 1
	REAL  shift 2
	BOOL  shift 3
	CHAR  shift 4
	.  error

	declarationList  goto 10
	variableDeclaration  goto 7
	functDeclaration  goto 8
	type  goto 9


state 8
	declarationList : functDeclaration . declarationList  (3)

	INT  shift 1
	REAL  shift 2
	BOOL  shift 3
	CHAR  shift 4
	.  error

	declarationList  goto 11
	variableDeclaration  goto 7
	functDeclaration  goto 8
	type  goto 9


state 9
	functDeclaration : type . IDENTIFIER '(' functParamsDef ')' commandBlock ';'  (4)
	variableDeclaration : type . IDENTIFIER arrayOrNormal ';'  (72)

	IDENTIFIER  shift 12
	.  error


state 10
	declarationList : variableDeclaration declarationList .  (2)

	.  reduce 2


state 11
	declarationList : functDeclaration declarationList .  (3)

	.  reduce 3


state 12
	functDeclaration : type IDENTIFIER . '(' functParamsDef ')' commandBlock ';'  (4)
	variableDeclaration : type IDENTIFIER . arrayOrNormal ';'  (72)

	'('  shift 13
	'['  shift 14
	':'  shift 15
	.  error

	arrayOrNormal  goto 16


state 13
	functDeclaration : type IDENTIFIER '(' . functParamsDef ')' commandBlock ';'  (4)
	functParamsDef : .  (18)

	INT  shift 1
	REAL  shift 2
	BOOL  shift 3
	CHAR  shift 4
	')'  reduce 18

	type  goto 17
	functParamsDef  goto 18


state 14
	arrayOrNormal : '[' . INTEGER ']' arrayInit  (74)

	INTEGER  shift 19
	.  error


state 15
	arrayOrNormal : ':' . literal  (73)

	CHAR  shift 20
	INTEGER  shift 21
	FALSE  shift 22
	TRUE  shift 23
	.  error

	literal  goto 24


state 16
	variableDeclaration : type IDENTIFIER arrayOrNormal . ';'  (72)

	';'  shift 25
	.  error


state 17
	functParamsDef : type . IDENTIFIER functParamsDefCont  (17)

	IDENTIFIER  shift 26
	.  error


state 18
	functDeclaration : type IDENTIFIER '(' functParamsDef . ')' commandBlock ';'  (4)

	')'  shift 27
	.  error


state 19
	arrayOrNormal : '[' INTEGER . ']' arrayInit  (74)

	']'  shift 28
	.  error


state 20
	literal : CHAR .  (82)

	.  reduce 82


state 21
	literal : INTEGER .  (79)

	.  reduce 79


state 22
	literal : FALSE .  (80)

	.  reduce 80


state 23
	literal : TRUE .  (81)

	.  reduce 81


state 24
	arrayOrNormal : ':' literal .  (73)

	.  reduce 73


state 25
	variableDeclaration : type IDENTIFIER arrayOrNormal ';' .  (72)

	.  reduce 72


state 26
	functParamsDef : type IDENTIFIER . functParamsDefCont  (17)
	functParamsDefCont : .  (20)

	','  shift 29
	')'  reduce 20

	functParamsDefCont  goto 30


state 27
	functDeclaration : type IDENTIFIER '(' functParamsDef ')' . commandBlock ';'  (4)

	'{'  shift 31
	.  error

	commandBlock  goto 32


state 28
	arrayOrNormal : '[' INTEGER ']' . arrayInit  (74)
	arrayInit : .  (76)

	':'  shift 33
	';'  reduce 76

	arrayInit  goto 34


state 29
	functParamsDefCont : ',' . type IDENTIFIER functParamsDefCont  (19)

	INT  shift 1
	REAL  shift 2
	BOOL  shift 3
	CHAR  shift 4
	.  error

	type  goto 35


state 30
	functParamsDef : type IDENTIFIER functParamsDefCont .  (17)

	.  reduce 17


state 31
	commandBlock : '{' . commandBlockList '}'  (21)
	command : .  (11)

	IDENTIFIER  shift 36
	READ  shift 37
	PRINT  shift 38
	RETURN  shift 39
	FOR  shift 40
	IF  shift 41
	'{'  shift 31
	';'  reduce 11

	commandBlock  goto 42
	command  goto 43
	print  goto 44
	return  goto 45
	read  goto 46
	attribuition  goto 47
	flowControl  goto 48
	commandBlockList  goto 49


state 32
	functDeclaration : type IDENTIFIER '(' functParamsDef ')' commandBlock . ';'  (4)

	';'  shift 50
	.  error


state 33
	arrayInit : ':' . arrayInitLiterals  (75)
	arrayInitLiterals : .  (78)

	CHAR  shift 20
	INTEGER  shift 21
	FALSE  shift 22
	TRUE  shift 23
	';'  reduce 78

	literal  goto 51
	arrayInitLiterals  goto 52


state 34
	arrayOrNormal : '[' INTEGER ']' arrayInit .  (74)

	.  reduce 74


state 35
	functParamsDefCont : ',' type . IDENTIFIER functParamsDefCont  (19)

	IDENTIFIER  shift 53
	.  error


state 36
	attribuition : IDENTIFIER . attribuitionCont  (30)

	'='  shift 54
	'['  shift 55
	.  error

	attribuitionCont  goto 56


state 37
	read : READ . IDENTIFIER  (33)

	IDENTIFIER  shift 57
	.  error


state 38
	print : PRINT . printList  (35)
	printList : .  (38)

	REAL  shift 58
	CHAR  shift 59
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 63
	STRING  shift 64
	'('  shift 65
	ELSE  reduce 38
	';'  reduce 38

	functCall  goto 66
	expression  goto 67
	printList  goto 68
	logicalExpression  goto 69
	arithmeticExpression  goto 70
	integerExpression  goto 71
	charExpression  goto 72


state 39
	return : RETURN . expression  (34)

	REAL  shift 58
	CHAR  shift 59
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 63
	'('  shift 65
	.  error

	functCall  goto 66
	expression  goto 73
	logicalExpression  goto 69
	arithmeticExpression  goto 70
	integerExpression  goto 71
	charExpression  goto 72


state 40
	flowControl : FOR . '(' forCont  (24)

	'('  shift 74
	.  error


state 41
	flowControl : IF . '(' expression ')' THEN command ifThenCont  (23)

	'('  shift 75
	.  error


state 42
	command : commandBlock .  (10)

	.  reduce 10


state 43
	commandBlockList : command . ';' commandBlockList  (22)

	';'  shift 76
	.  error


state 44
	command : print .  (5)

	.  reduce 5


state 45
	command : return .  (6)

	.  reduce 6


state 46
	command : read .  (7)

	.  reduce 7


state 47
	command : attribuition .  (8)

	.  reduce 8


state 48
	command : flowControl .  (9)

	.  reduce 9


state 49
	commandBlock : '{' commandBlockList . '}'  (21)

	'}'  shift 77
	.  error


state 50
	functDeclaration : type IDENTIFIER '(' functParamsDef ')' commandBlock ';' .  (4)

	.  reduce 4


state 51
	arrayInitLiterals : literal . arrayInitLiterals  (77)
	arrayInitLiterals : .  (78)

	CHAR  shift 20
	INTEGER  shift 21
	FALSE  shift 22
	TRUE  shift 23
	';'  reduce 78

	literal  goto 51
	arrayInitLiterals  goto 78


state 52
	arrayInit : ':' arrayInitLiterals .  (75)

	.  reduce 75


state 53
	functParamsDefCont : ',' type IDENTIFIER . functParamsDefCont  (19)
	functParamsDefCont : .  (20)

	','  shift 29
	')'  reduce 20

	functParamsDefCont  goto 79


state 54
	attribuitionCont : '=' . expression  (31)

	REAL  shift 58
	CHAR  shift 59
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 63
	'('  shift 65
	.  error

	functCall  goto 66
	expression  goto 80
	logicalExpression  goto 69
	arithmeticExpression  goto 70
	integerExpression  goto 71
	charExpression  goto 72


state 55
	attribuitionCont : '[' . expression ']' '=' expression  (32)

	REAL  shift 58
	CHAR  shift 59
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 63
	'('  shift 65
	.  error

	functCall  goto 66
	expression  goto 81
	logicalExpression  goto 69
	arithmeticExpression  goto 70
	integerExpression  goto 71
	charExpression  goto 72


state 56
	attribuition : IDENTIFIER attribuitionCont .  (30)

	.  reduce 30


state 57
	read : READ IDENTIFIER .  (33)

	.  reduce 33


state 58
	arithmeticExpression : REAL .  (46)

	.  reduce 46


state 59
	charExpression : CHAR .  (50)

	.  reduce 50


state 60
	integerExpression : INTEGER .  (48)

	.  reduce 48


state 61
	logicalExpression : FALSE .  (42)

	.  reduce 42


state 62
	logicalExpression : TRUE .  (41)

	.  reduce 41


63: shift/reduce conflict (shift 82, reduce 57) on '('
state 63
	functCall : IDENTIFIER . '(' functParams ')'  (12)
	arithmeticExpression : IDENTIFIER . expressionVarCont  (45)
	expressionVarCont : .  (57)

	'('  shift 82
	'['  shift 83
	REAL  reduce 57
	CHAR  reduce 57
	INTEGER  reduce 57
	FALSE  reduce 57
	TRUE  reduce 57
	IDENTIFIER  reduce 57
	STRING  reduce 57
	TO  reduce 57
	ELSE  reduce 57
	')'  reduce 57
	';'  reduce 57
	']'  reduce 57
	"=="  reduce 57
	"!="  reduce 57
	"<="  reduce 57
	">="  reduce 57
	'+'  reduce 57
	'-'  reduce 57
	'*'  reduce 57
	'/'  reduce 57

	expressionVarCont  goto 84


state 64
	printList : STRING . printList  (36)
	printList : .  (38)

	REAL  shift 58
	CHAR  shift 59
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 63
	STRING  shift 64
	'('  shift 65
	ELSE  reduce 38
	';'  reduce 38

	functCall  goto 66
	expression  goto 67
	printList  goto 85
	logicalExpression  goto 69
	arithmeticExpression  goto 70
	integerExpression  goto 71
	charExpression  goto 72


state 65
	expression : '(' . expression ')'  (51)

	REAL  shift 58
	CHAR  shift 59
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 63
	'('  shift 65
	.  error

	functCall  goto 66
	expression  goto 86
	logicalExpression  goto 69
	arithmeticExpression  goto 70
	integerExpression  goto 71
	charExpression  goto 72


state 66
	expression : functCall .  (55)

	.  reduce 55


state 67
	printList : expression . printList  (37)
	printList : .  (38)

	REAL  shift 58
	CHAR  shift 59
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 63
	STRING  shift 64
	'('  shift 65
	ELSE  reduce 38
	';'  reduce 38

	functCall  goto 66
	expression  goto 67
	printList  goto 87
	logicalExpression  goto 69
	arithmeticExpression  goto 70
	integerExpression  goto 71
	charExpression  goto 72


state 68
	print : PRINT printList .  (35)

	.  reduce 35


state 69
	logicalExpression : logicalExpression . logicalOperators logicalExpression  (40)
	expression : logicalExpression .  (52)

	"||"  shift 88
	"&&"  shift 89
	REAL  reduce 52
	CHAR  reduce 52
	INTEGER  reduce 52
	FALSE  reduce 52
	TRUE  reduce 52
	IDENTIFIER  reduce 52
	STRING  reduce 52
	TO  reduce 52
	ELSE  reduce 52
	'('  reduce 52
	')'  reduce 52
	';'  reduce 52
	']'  reduce 52

	logicalOperators  goto 90


state 70
	logicalExpression : arithmeticExpression . relationalOperators arithmeticExpression  (39)
	arithmeticExpression : arithmeticExpression . arithmeticOperators arithmeticExpression  (43)
	expression : arithmeticExpression .  (53)

	"=="  shift 91
	"!="  shift 92
	"<="  shift 93
	">="  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	REAL  reduce 53
	CHAR  reduce 53
	INTEGER  reduce 53
	FALSE  reduce 53
	TRUE  reduce 53
	IDENTIFIER  reduce 53
	STRING  reduce 53
	TO  reduce 53
	ELSE  reduce 53
	'('  reduce 53
	')'  reduce 53
	';'  reduce 53
	']'  reduce 53

	relationalOperators  goto 99
	arithmeticOperators  goto 100


71: shift/reduce conflict (shift 95, reduce 44) on '+'
71: shift/reduce conflict (shift 96, reduce 44) on '-'
71: shift/reduce conflict (shift 97, reduce 44) on '*'
71: shift/reduce conflict (shift 98, reduce 44) on '/'
state 71
	arithmeticExpression : integerExpression .  (44)
	integerExpression : integerExpression . arithmeticOperators integerExpression  (47)

	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	REAL  reduce 44
	CHAR  reduce 44
	INTEGER  reduce 44
	FALSE  reduce 44
	TRUE  reduce 44
	IDENTIFIER  reduce 44
	STRING  reduce 44
	TO  reduce 44
	ELSE  reduce 44
	'('  reduce 44
	')'  reduce 44
	';'  reduce 44
	']'  reduce 44
	"||"  reduce 44
	"&&"  reduce 44
	"=="  reduce 44
	"!="  reduce 44
	"<="  reduce 44
	">="  reduce 44

	arithmeticOperators  goto 101


state 72
	charExpression : charExpression . operator charExpression  (49)
	expression : charExpression .  (54)

	"||"  shift 88
	"&&"  shift 89
	"=="  shift 91
	"!="  shift 92
	"<="  shift 93
	">="  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	REAL  reduce 54
	CHAR  reduce 54
	INTEGER  reduce 54
	FALSE  reduce 54
	TRUE  reduce 54
	IDENTIFIER  reduce 54
	STRING  reduce 54
	TO  reduce 54
	ELSE  reduce 54
	'('  reduce 54
	')'  reduce 54
	';'  reduce 54
	']'  reduce 54

	relationalOperators  goto 102
	logicalOperators  goto 103
	arithmeticOperators  goto 104
	operator  goto 105


state 73
	return : RETURN expression .  (34)

	.  reduce 34


state 74
	flowControl : FOR '(' . forCont  (24)

	REAL  shift 58
	CHAR  shift 59
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 106
	'('  shift 65
	.  error

	functCall  goto 66
	expression  goto 107
	forCont  goto 108
	logicalExpression  goto 69
	arithmeticExpression  goto 70
	integerExpression  goto 71
	charExpression  goto 72


state 75
	flowControl : IF '(' . expression ')' THEN command ifThenCont  (23)

	REAL  shift 58
	CHAR  shift 59
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 63
	'('  shift 65
	.  error

	functCall  goto 66
	expression  goto 109
	logicalExpression  goto 69
	arithmeticExpression  goto 70
	integerExpression  goto 71
	charExpression  goto 72


state 76
	commandBlockList : command ';' . commandBlockList  (22)
	command : .  (11)

	IDENTIFIER  shift 36
	READ  shift 37
	PRINT  shift 38
	RETURN  shift 39
	FOR  shift 40
	IF  shift 41
	'{'  shift 31
	';'  reduce 11

	commandBlock  goto 42
	command  goto 43
	print  goto 44
	return  goto 45
	read  goto 46
	attribuition  goto 47
	flowControl  goto 48
	commandBlockList  goto 110


state 77
	commandBlock : '{' commandBlockList '}' .  (21)

	.  reduce 21


state 78
	arrayInitLiterals : literal arrayInitLiterals .  (77)

	.  reduce 77


state 79
	functParamsDefCont : ',' type IDENTIFIER functParamsDefCont .  (19)

	.  reduce 19


state 80
	attribuitionCont : '=' expression .  (31)

	.  reduce 31


state 81
	attribuitionCont : '[' expression . ']' '=' expression  (32)

	']'  shift 111
	.  error


state 82
	functCall : IDENTIFIER '(' . functParams ')'  (12)
	functParams : .  (14)

	IDENTIFIER  shift 112
	')'  reduce 14

	functParams  goto 113


state 83
	expressionVarCont : '[' . arrayPosition ']'  (56)

	INTEGER  shift 60
	.  error

	integerExpression  goto 114
	arrayPosition  goto 115


state 84
	arithmeticExpression : IDENTIFIER expressionVarCont .  (45)

	.  reduce 45


state 85
	printList : STRING printList .  (36)

	.  reduce 36


state 86
	expression : '(' expression . ')'  (51)

	')'  shift 116
	.  error


state 87
	printList : expression printList .  (37)

	.  reduce 37


state 88
	logicalOperators : "||" .  (62)

	.  reduce 62


state 89
	logicalOperators : "&&" .  (63)

	.  reduce 63


state 90
	logicalExpression : logicalExpression logicalOperators . logicalExpression  (40)

	REAL  shift 58
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 117
	.  error

	logicalExpression  goto 118
	arithmeticExpression  goto 119
	integerExpression  goto 71


state 91
	relationalOperators : "==" .  (64)

	.  reduce 64


state 92
	relationalOperators : "!=" .  (65)

	.  reduce 65


state 93
	relationalOperators : "<=" .  (66)

	.  reduce 66


state 94
	relationalOperators : ">=" .  (67)

	.  reduce 67


state 95
	arithmeticOperators : '+' .  (68)

	.  reduce 68


state 96
	arithmeticOperators : '-' .  (69)

	.  reduce 69


state 97
	arithmeticOperators : '*' .  (70)

	.  reduce 70


state 98
	arithmeticOperators : '/' .  (71)

	.  reduce 71


state 99
	logicalExpression : arithmeticExpression relationalOperators . arithmeticExpression  (39)

	REAL  shift 58
	INTEGER  shift 60
	IDENTIFIER  shift 117
	.  error

	arithmeticExpression  goto 120
	integerExpression  goto 71


state 100
	arithmeticExpression : arithmeticExpression arithmeticOperators . arithmeticExpression  (43)

	REAL  shift 58
	INTEGER  shift 60
	IDENTIFIER  shift 117
	.  error

	arithmeticExpression  goto 121
	integerExpression  goto 71


state 101
	integerExpression : integerExpression arithmeticOperators . integerExpression  (47)

	INTEGER  shift 60
	.  error

	integerExpression  goto 122


state 102
	operator : relationalOperators .  (60)

	.  reduce 60


state 103
	operator : logicalOperators .  (59)

	.  reduce 59


state 104
	operator : arithmeticOperators .  (61)

	.  reduce 61


state 105
	charExpression : charExpression operator . charExpression  (49)

	CHAR  shift 59
	.  error

	charExpression  goto 123


state 106
	functCall : IDENTIFIER . '(' functParams ')'  (12)
	forCont : IDENTIFIER . '=' expression TO expression forEnd  (28)
	arithmeticExpression : IDENTIFIER . expressionVarCont  (45)
	expressionVarCont : .  (57)

	'('  shift 82
	'='  shift 124
	'['  shift 83
	')'  reduce 57
	"=="  reduce 57
	"!="  reduce 57
	"<="  reduce 57
	">="  reduce 57
	'+'  reduce 57
	'-'  reduce 57
	'*'  reduce 57
	'/'  reduce 57

	expressionVarCont  goto 84


state 107
	forCont : expression . forEnd  (27)

	')'  shift 125
	.  error

	forEnd  goto 126


state 108
	flowControl : FOR '(' forCont .  (24)

	.  reduce 24


state 109
	flowControl : IF '(' expression . ')' THEN command ifThenCont  (23)

	')'  shift 127
	.  error


state 110
	commandBlockList : command ';' commandBlockList .  (22)

	.  reduce 22


state 111
	attribuitionCont : '[' expression ']' . '=' expression  (32)

	'='  shift 128
	.  error


state 112
	functParams : IDENTIFIER . functParamsCont  (13)
	functParamsCont : .  (16)

	','  shift 129
	')'  reduce 16

	functParamsCont  goto 130


state 113
	functCall : IDENTIFIER '(' functParams . ')'  (12)

	')'  shift 131
	.  error


state 114
	integerExpression : integerExpression . arithmeticOperators integerExpression  (47)
	arrayPosition : integerExpression .  (58)

	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	']'  reduce 58

	arithmeticOperators  goto 101


state 115
	expressionVarCont : '[' arrayPosition . ']'  (56)

	']'  shift 132
	.  error


state 116
	expression : '(' expression ')' .  (51)

	.  reduce 51


state 117
	arithmeticExpression : IDENTIFIER . expressionVarCont  (45)
	expressionVarCont : .  (57)

	'['  shift 83
	REAL  reduce 57
	CHAR  reduce 57
	INTEGER  reduce 57
	FALSE  reduce 57
	TRUE  reduce 57
	IDENTIFIER  reduce 57
	STRING  reduce 57
	TO  reduce 57
	ELSE  reduce 57
	'('  reduce 57
	')'  reduce 57
	';'  reduce 57
	']'  reduce 57
	"||"  reduce 57
	"&&"  reduce 57
	"=="  reduce 57
	"!="  reduce 57
	"<="  reduce 57
	">="  reduce 57
	'+'  reduce 57
	'-'  reduce 57
	'*'  reduce 57
	'/'  reduce 57

	expressionVarCont  goto 84


118: shift/reduce conflict (shift 88, reduce 40) on "||"
118: shift/reduce conflict (shift 89, reduce 40) on "&&"
state 118
	logicalExpression : logicalExpression . logicalOperators logicalExpression  (40)
	logicalExpression : logicalExpression logicalOperators logicalExpression .  (40)

	"||"  shift 88
	"&&"  shift 89
	REAL  reduce 40
	CHAR  reduce 40
	INTEGER  reduce 40
	FALSE  reduce 40
	TRUE  reduce 40
	IDENTIFIER  reduce 40
	STRING  reduce 40
	TO  reduce 40
	ELSE  reduce 40
	'('  reduce 40
	')'  reduce 40
	';'  reduce 40
	']'  reduce 40

	logicalOperators  goto 90


state 119
	logicalExpression : arithmeticExpression . relationalOperators arithmeticExpression  (39)
	arithmeticExpression : arithmeticExpression . arithmeticOperators arithmeticExpression  (43)

	"=="  shift 91
	"!="  shift 92
	"<="  shift 93
	">="  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	.  error

	relationalOperators  goto 99
	arithmeticOperators  goto 100


state 120
	logicalExpression : arithmeticExpression relationalOperators arithmeticExpression .  (39)
	arithmeticExpression : arithmeticExpression . arithmeticOperators arithmeticExpression  (43)

	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	REAL  reduce 39
	CHAR  reduce 39
	INTEGER  reduce 39
	FALSE  reduce 39
	TRUE  reduce 39
	IDENTIFIER  reduce 39
	STRING  reduce 39
	TO  reduce 39
	ELSE  reduce 39
	'('  reduce 39
	')'  reduce 39
	';'  reduce 39
	']'  reduce 39
	"||"  reduce 39
	"&&"  reduce 39

	arithmeticOperators  goto 100


121: shift/reduce conflict (shift 95, reduce 43) on '+'
121: shift/reduce conflict (shift 96, reduce 43) on '-'
121: shift/reduce conflict (shift 97, reduce 43) on '*'
121: shift/reduce conflict (shift 98, reduce 43) on '/'
state 121
	arithmeticExpression : arithmeticExpression . arithmeticOperators arithmeticExpression  (43)
	arithmeticExpression : arithmeticExpression arithmeticOperators arithmeticExpression .  (43)

	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	REAL  reduce 43
	CHAR  reduce 43
	INTEGER  reduce 43
	FALSE  reduce 43
	TRUE  reduce 43
	IDENTIFIER  reduce 43
	STRING  reduce 43
	TO  reduce 43
	ELSE  reduce 43
	'('  reduce 43
	')'  reduce 43
	';'  reduce 43
	']'  reduce 43
	"||"  reduce 43
	"&&"  reduce 43
	"=="  reduce 43
	"!="  reduce 43
	"<="  reduce 43
	">="  reduce 43

	arithmeticOperators  goto 100


122: shift/reduce conflict (shift 95, reduce 47) on '+'
122: shift/reduce conflict (shift 96, reduce 47) on '-'
122: shift/reduce conflict (shift 97, reduce 47) on '*'
122: shift/reduce conflict (shift 98, reduce 47) on '/'
state 122
	integerExpression : integerExpression . arithmeticOperators integerExpression  (47)
	integerExpression : integerExpression arithmeticOperators integerExpression .  (47)

	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	REAL  reduce 47
	CHAR  reduce 47
	INTEGER  reduce 47
	FALSE  reduce 47
	TRUE  reduce 47
	IDENTIFIER  reduce 47
	STRING  reduce 47
	TO  reduce 47
	ELSE  reduce 47
	'('  reduce 47
	')'  reduce 47
	';'  reduce 47
	']'  reduce 47
	"||"  reduce 47
	"&&"  reduce 47
	"=="  reduce 47
	"!="  reduce 47
	"<="  reduce 47
	">="  reduce 47

	arithmeticOperators  goto 101


123: shift/reduce conflict (shift 88, reduce 49) on "||"
123: shift/reduce conflict (shift 89, reduce 49) on "&&"
123: shift/reduce conflict (shift 91, reduce 49) on "=="
123: shift/reduce conflict (shift 92, reduce 49) on "!="
123: shift/reduce conflict (shift 93, reduce 49) on "<="
123: shift/reduce conflict (shift 94, reduce 49) on ">="
123: shift/reduce conflict (shift 95, reduce 49) on '+'
123: shift/reduce conflict (shift 96, reduce 49) on '-'
123: shift/reduce conflict (shift 97, reduce 49) on '*'
123: shift/reduce conflict (shift 98, reduce 49) on '/'
state 123
	charExpression : charExpression . operator charExpression  (49)
	charExpression : charExpression operator charExpression .  (49)

	"||"  shift 88
	"&&"  shift 89
	"=="  shift 91
	"!="  shift 92
	"<="  shift 93
	">="  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	REAL  reduce 49
	CHAR  reduce 49
	INTEGER  reduce 49
	FALSE  reduce 49
	TRUE  reduce 49
	IDENTIFIER  reduce 49
	STRING  reduce 49
	TO  reduce 49
	ELSE  reduce 49
	'('  reduce 49
	')'  reduce 49
	';'  reduce 49
	']'  reduce 49

	relationalOperators  goto 102
	logicalOperators  goto 103
	arithmeticOperators  goto 104
	operator  goto 105


state 124
	forCont : IDENTIFIER '=' . expression TO expression forEnd  (28)

	REAL  shift 58
	CHAR  shift 59
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 63
	'('  shift 65
	.  error

	functCall  goto 66
	expression  goto 133
	logicalExpression  goto 69
	arithmeticExpression  goto 70
	integerExpression  goto 71
	charExpression  goto 72


state 125
	forEnd : ')' . command  (29)
	command : .  (11)

	IDENTIFIER  shift 36
	READ  shift 37
	PRINT  shift 38
	RETURN  shift 39
	FOR  shift 40
	IF  shift 41
	'{'  shift 31
	ELSE  reduce 11
	';'  reduce 11

	commandBlock  goto 42
	command  goto 134
	print  goto 44
	return  goto 45
	read  goto 46
	attribuition  goto 47
	flowControl  goto 48


state 126
	forCont : expression forEnd .  (27)

	.  reduce 27


state 127
	flowControl : IF '(' expression ')' . THEN command ifThenCont  (23)

	THEN  shift 135
	.  error


state 128
	attribuitionCont : '[' expression ']' '=' . expression  (32)

	REAL  shift 58
	CHAR  shift 59
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 63
	'('  shift 65
	.  error

	functCall  goto 66
	expression  goto 136
	logicalExpression  goto 69
	arithmeticExpression  goto 70
	integerExpression  goto 71
	charExpression  goto 72


state 129
	functParamsCont : ',' . IDENTIFIER functParamsCont  (15)

	IDENTIFIER  shift 137
	.  error


state 130
	functParams : IDENTIFIER functParamsCont .  (13)

	.  reduce 13


state 131
	functCall : IDENTIFIER '(' functParams ')' .  (12)

	.  reduce 12


state 132
	expressionVarCont : '[' arrayPosition ']' .  (56)

	.  reduce 56


state 133
	forCont : IDENTIFIER '=' expression . TO expression forEnd  (28)

	TO  shift 138
	.  error


state 134
	forEnd : ')' command .  (29)

	.  reduce 29


state 135
	flowControl : IF '(' expression ')' THEN . command ifThenCont  (23)
	command : .  (11)

	IDENTIFIER  shift 36
	READ  shift 37
	PRINT  shift 38
	RETURN  shift 39
	FOR  shift 40
	IF  shift 41
	'{'  shift 31
	ELSE  reduce 11
	';'  reduce 11

	commandBlock  goto 42
	command  goto 139
	print  goto 44
	return  goto 45
	read  goto 46
	attribuition  goto 47
	flowControl  goto 48


state 136
	attribuitionCont : '[' expression ']' '=' expression .  (32)

	.  reduce 32


state 137
	functParamsCont : ',' IDENTIFIER . functParamsCont  (15)
	functParamsCont : .  (16)

	','  shift 129
	')'  reduce 16

	functParamsCont  goto 140


state 138
	forCont : IDENTIFIER '=' expression TO . expression forEnd  (28)

	REAL  shift 58
	CHAR  shift 59
	INTEGER  shift 60
	FALSE  shift 61
	TRUE  shift 62
	IDENTIFIER  shift 63
	'('  shift 65
	.  error

	functCall  goto 66
	expression  goto 141
	logicalExpression  goto 69
	arithmeticExpression  goto 70
	integerExpression  goto 71
	charExpression  goto 72


139: shift/reduce conflict (shift 142, reduce 26) on ELSE
state 139
	flowControl : IF '(' expression ')' THEN command . ifThenCont  (23)
	ifThenCont : .  (26)

	ELSE  shift 142
	';'  reduce 26

	ifThenCont  goto 143


state 140
	functParamsCont : ',' IDENTIFIER functParamsCont .  (15)

	.  reduce 15


state 141
	forCont : IDENTIFIER '=' expression TO expression . forEnd  (28)

	')'  shift 125
	.  error

	forEnd  goto 144


state 142
	ifThenCont : ELSE . command  (25)
	command : .  (11)

	IDENTIFIER  shift 36
	READ  shift 37
	PRINT  shift 38
	RETURN  shift 39
	FOR  shift 40
	IF  shift 41
	'{'  shift 31
	ELSE  reduce 11
	';'  reduce 11

	commandBlock  goto 42
	command  goto 145
	print  goto 44
	return  goto 45
	read  goto 46
	attribuition  goto 47
	flowControl  goto 48


state 143
	flowControl : IF '(' expression ')' THEN command ifThenCont .  (23)

	.  reduce 23


state 144
	forCont : IDENTIFIER '=' expression TO expression forEnd .  (28)

	.  reduce 28


state 145
	ifThenCont : ELSE command .  (25)

	.  reduce 25


State 63 contains 1 shift/reduce conflict.
State 71 contains 4 shift/reduce conflicts.
State 118 contains 2 shift/reduce conflicts.
State 121 contains 4 shift/reduce conflicts.
State 122 contains 4 shift/reduce conflicts.
State 123 contains 10 shift/reduce conflicts.
State 139 contains 1 shift/reduce conflict.


40 terminals, 39 nonterminals
87 grammar rules, 146 states
